//And change AWS_ACCOUNT_ID, AWS_DEFAULT_REGION_IMAGE_REPO_NAME
pipeline {
    agent any

    environment {
        AWS_ACCOUNT_ID = credentials ('AWS_ACCOUNT_ID')
        AWS_DEFAULT_REGION = credentials ('AWS_DEFAULT_REGION') 
        IMAGE_REPO_NAME = credentials ('IMAGE_REPO_NAME')
        AWS_ACCESS_KEY_ID = credentials ('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials ('AWS_SECRET_ACCESS_KEY')
        IMAGE_TAG="latest"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
    }

    stages {
       stage ('Cloning Git') {
         steps {
            sh '''
            git clone https://github.com/mzmarci/server_new.git
           
            '''
         }
       }
       
          // Building Docker images

      stage('Building image') {
        steps{
        script {
        dockerImage = docker.build "mzmarci:latest" 
        }
      }
    }
           // Uploading Docker images into AWS ECR
      stage('Pushing to ECR') {
        steps{  
           script {
           sh "aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 723855297198.dkr.ecr.eu-west-1.amazonaws.com/mzmarci"
           sh "docker tag mzmarci:latest 723855297198.dkr.ecr.eu-west-1.amazonaws.com/mzmarci:latest"
           sh "docker push 723855297198.dkr.ecr.eu-west-1.amazonaws.com/mzmarci:latest"
         }
        }
      }
      stage ("build for bastion & webserver") {
        steps {
           sh '''
                  cd jenkins
                  cd ec2
               '''   
         }
      }
      stage ("Terraform init") {
        steps {
           sh 'terraform init'   
        }
      }
      stage ("Terraform Apply") {
        steps {
           sh 'terraform apply --auto-approve'   
        }
      }
      stage("Delete Temporary Workspace") {
            steps {
                cleanWs()
            }
        }
    }  
}

              //   aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 571754706044.dkr.ecr.us-east-1.amazonaws.com/clixx-repository
              //   docker tag clixx-image:$VERSION 571754706044.dkr.ecr.us-east-1.amazonaws.com/clixx-repository:clixx-image-$VERSION
              //   docker tag clixx-image:$VERSION 571754706044.dkr.ecr.us-east-1.amazonaws.com/clixx-repository:latest
              //   docker push 571754706044.dkr.ecr.us-east-1.amazonaws.com/clixx-repository:clixx-image-$VERSION
              //   docker push 571754706044.dkr.ecr.us-east-1.amazonaws.com/clixx-repository:latest
              // // '''