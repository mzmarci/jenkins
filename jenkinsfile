//And change AWS_ACCOUNT_ID, AWS_DEFAULT_REGION_IMAGE_REPO_NAME
pipeline {
    agent any

    environment {
        AWS_ACCOUNT_ID = credentials ('AWS_ACCOUNT_ID')
        AWS_DEFAULT_REGION = credentials ('AWS_DEFAULT_REGION') 
        IMAGE_REPO_NAME = credentials ('IMAGE_REPO_NAME')
        AWS_ACCESS_KEY_ID = credentials ('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials ('AWS_SECRET_ACCESS_KEY')
        IMAGE_TAG="latest"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
    }

    stages {
        
       stage('Logging into AWS ECR') {
         steps {
            script {
            sh """aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"""
             }
                 
          }
        }
       stage ('Cloning Git') {
         steps {
            sh '''
            git clone https://github.com/mzmarci/jenkins.git
           
            '''
         }
       }
       
          // Building Docker images

      stage('Building image') {
        steps{
        script {
        dockerImage = docker.build "${IMAGE_REPO_NAME}:${IMAGE_TAG}" 
        }
      }
    }
           // Uploading Docker images into AWS ECR
      stage('Pushing to ECR') {
        steps{  
           script {
           sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:$IMAGE_TAG"
           sh "docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
         }
        }
      }
      stage ("build for bastion & webserver") {
        steps {
           sh '''
                  cd jenkins
                  cd ec2
               '''   
         }
      }
      stage ("Terraform init") {
        steps {
           sh 'terraform init'   
        }
      }
      stage ("Terraform Apply") {
        steps {
           sh 'terraform apply --auto-approve'   
        }
      }
    }  
}